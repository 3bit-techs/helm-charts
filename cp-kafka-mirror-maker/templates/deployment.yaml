apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "cp-kafka-mirror-maker.fullname" . }}
  labels:
    app: {{ template "cp-kafka-mirror-maker.name" . }}
    chart: {{ template "cp-kafka-mirror-maker.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "cp-kafka-mirror-maker.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "cp-kafka-mirror-maker.name" . }}
        release: {{ .Release.Name }}
      {{- if or .Values.podAnnotations .Values.jmx.enabled }}
      annotations:
      {{- range $key, $value := .Values.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
      {{- if .Values.jmx.enabled }}
        prometheus.io/scrape: "true"
        prometheus.io/port: {{ .Values.prometheus.jmx.port | quote }}
      {{- end }}
      {{- end }}
    spec:
      containers:
        {{- if .Values.jmx.enabled }}
        - name: prometheus-jmx-exporter
          image: "{{ .Values.prometheus.jmx.image }}:{{ .Values.prometheus.jmx.imageTag }}"
          command:
          - java
          - -jar
          - jmx_prometheus_httpserver.jar
          - {{ .Values.prometheus.jmx.port | quote }}
          - /etc/jmx-cp-kafka-mirror-maker/jmx-cp-kafka-mirror-maker-prometheus.yml
          ports:
          - containerPort: {{ .Values.prometheus.jmx.port }}
          resources:
{{ toYaml .Values.prometheus.jmx.resources | indent 12 }}
          volumeMounts:
          - name: jmx-config
            mountPath: /etc/jmx-cp-kafka-mirror-maker
        {{- end }}
        - name: {{ template "cp-kafka-mirror-maker.name" . }}-server
          image: "{{ .Values.image }}:{{ .Values.imageTag }}"
          imagePullPolicy: "{{ .Values.imagePullPolicy }}"
          ports:
            - name: mirror-maker
              containerPort: {{ .Values.servicePort }}
              protocol: TCP
            {{- if .Values.jmx.enabled }}
            - containerPort: {{ .Values.jmx.port }}
              name: jmx
            {{- end }}
          command: ["/bin/bash", "-c", "cp-kafka-mirror-maker"]
          args:
            - --consumer.config=/etc/mirror-maker/consumer.properties
            - --producer.config=/etc/mirror-maker/producer.properties
          {{- if .Values.kafka.topicWhitelist }}
            - --whitelist {{ .Values.kafka.topicWhitelist }}
          {{- end }}
          {{- if .Values.kafka.topicBlacklist }}
            - --blacklist {{ .Values.kafka.topicBlacklist }}
          {{- end }}
            - --num.streams {{ .Values.kafka.numStreams }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          volumeMounts:
          - name: mirror-maker-config
            mountPath: /etc/mirror-maker
          env:
            - name: KAFKA_HEAP_OPTS
              value: "{{ .Values.heapOptions }}"
            {{- if .Values.jmx.port }}
            - name: JMX_PORT
              value: "{{ .Values.jmx.port }}"
            {{- end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 8 }}
      {{- end }}
      volumes:
      {{- if .Values.jmx.enabled }}
      - name: jmx-config
        configMap:
          name: {{ template "cp-kafka-mirror-maker.fullname" . }}-jmx-configmap
      {{- end }}
      - name: mirror-maker-config
        configMap:
          name: {{ template "cp-kafka-mirror-maker.fullname" . }}-configmap
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- end }}
